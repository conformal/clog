.\"
.\" Copyright (c) 2010 Marco Peereboom <marco@peereboom.us>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: October 10 2011 $
.Dt CLOG 3
.Os
.Sh NAME
.Nm clog
.Nd Copious Logger
.Sh SYNOPSIS
.Fd #include <clog.h>
.Ft void
.Fn clog_init "int no_syslog"
.Ft int
.Fn clog_set_flags "u_int32_t flags"
.Ft int
.Fn clog_set_logfile "const char *logfile"
.Ft void
.Fn clog_set_mask "u_int64_t mask"
.Ft void
.Fn clog_version "int *major" "int *minor" "int *patch"
.Ft void
.Fn CEMERG "const char *format" "..."
.Ft void
.Fn CEMERGX "const char *format" "..."
.Ft void
.Fn CALERT "const char *format" "..."
.Ft void
.Fn CALERTX "const char *format" "..."
.Ft void
.Fn CCRIT "const char *format" "..."
.Ft void
.Fn CCRITX "const char *format" "..."
.Ft void
.Fn CERR "u_int64_t mask" "const char *format" "..."
.Ft void
.Fn CERRX "const char *format" "..."
.Ft void
.Fn CWARN "u_int64_t mask" "const char *format" "..."
.Ft void
.Fn CWARNX "const char *format" "..."
.Ft void
.Fn CNWARN "u_int64_t mask" "const char *format" "..."
.Ft void
.Fn CNWARNX "const char *format" "..."
.Ft void
.Fn CNOTICE "u_int64_t mask" "const char *format" "..."
.Ft void
.Fn CNNOTICE "const char *format" "..."
.Ft void
.Fn CINFO "u_int64_t mask" "const char *format" "..."
.Ft void
.Fn CNINFO "const char *format" "..."
.Ft void
.Fn CDBG "u_int64_t mask" "const char *format" "..."
.Ft void
.Fn CNDBG "const char *format" "..."
.Ft void
.Fn CFATAL "const char *format" "..."
.Ft void
.Fn CFATALX "const char *format" "..."
.Ft void
.Fn CABORT "const char *format" "..."
.Ft void
.Fn CABORTX "const char *format" "..."
.Sh DESCRIPTION
.Fn clog_init
prepares the library for first use.
This function should be called before any other function is called.
.Pp
.Fn clog_set_flags
sets the operational flags for
.Nm .
Possible values are:
.Bl -tag -width "CLOG_F_ENABLE" -offset indent -compact
.It Cm CLOG_F_FILE
Log source file name.
.It Cm CLOG_F_FUNC
Log source function name.
.It Cm CLOG_F_LINE
Log source file line number.
.It Cm CLOG_F_PID
Log program name and PID.
.It Cm CLOG_F_DATE
Log date in
.Xr ctime 3
format.
.It Cm CLOG_F_DTIME
Log delta time from previous log function invocation.
This time delta has micro second resolution.
.It Cm CLOG_F_FILOG
Log to
.Fa logfile
which is given as an argument to
.Fn clog_set_logfile .
The
.Fn clog_set_logfile
function must be called before setting this flag.
.It Cm CLOG_F_STDERR
Log to
.Fa stderr .
.It Cm CLOG_F_SYSLOG
Log to
.Xr syslog 3 .
Note that
.Xr syslog 3
always prepends the
.Xr ctime 3
date.
Currently all
.Nm
output goes to
.Fa LOG_DAEMON .
.It Cm CLOG_F_ENABLE
Enable logging.
.It Cm CLOG_F_DBGENABLE
Enable debug logging.
.El
.Pp
Only supported flags can be set and this function will return 0 on success and
1 on failure.
.Pp
.Fn clog_set_logfile
sets the log file to log to when
.Fa CLOG_F_FILOG
is set.  This function must be called before setting
.Fa CLOG_F_FILOG .
The returned value is 0 on success and 1 on failure.
.Pp
.Fn clog_set_mask
sets external debug mask.
The debug mask must be a bitfield and must be defined by the caller.
It is used to control what to log and what to skip.
.Pp
.Fn clog_version
gets the current version of the library at run time.
.Pp
All logging functions use the format as defined by
.Xr printf 3 .
The
.Fa N
in the name of the logging functions designates the use of a mask.
The functions for logging important messages (
.Fn CEMERG ,
.Fn CALERT ,
.Fn CCRIT ,
.Fn CERR
.Fn CFATAL
and
.Fn CABORT
) do not have masked variants since they are intended only for important
messages which should require no masking.
.Pp
.Fn CDBG ,
.Fn CINFO ,
.Fn CNOTICE ,
.Fn CWARN ,
.Fn CERR ,
.Fn CCRIT ,
.Fn CALERT ,
.Fn CEMERG
(and their masked counterparts where present) will log informational
messages with severities corresponding to the well known
.Xr syslog 3
levels if the
.Fa CLOG_F_ENABLE
flag is present and they are unmasked.
The
.Fn CDBG
family of functions additionally require the
.Fa CLOG_F_DBGENABLE
flag to be set.
.Pp
.Fn CFATALX
and
.Fn CFATAL
terminate the program using
.Xr exit 3
with a non-zero return value.
.Pp
.Fn CABORTX
and
.Fn CABORT
terminate the program using
.Xr abort 3
.Pp
The functions with an
.Fa X
in their name suppress
.Xr strerror 3
output, and are functionally equivalent to the
.Xr err 3
and
.Xr warn 3
family of functions.
.Sh SEE ALSO
.Xr printf 3
.Xr ctime 3
.Xr syslog 3
.Xr err 3
.Xr warn 3
.Sh HISTORY
.An -nosplit
.Nm
was written by
.An Marco Peereboom Aq marco@peereboom.us
